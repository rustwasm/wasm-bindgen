[package]
name = "web-sys"
version = "0.3.45"
authors = ["The wasm-bindgen Developers"]
readme = "./README.md"
homepage = "https://rustwasm.github.io/wasm-bindgen/web-sys/index.html"
documentation = "https://rustwasm.github.io/wasm-bindgen/api/web_sys/"
repository = "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/web-sys"
description = """
Bindings for all Web APIs, a procedurally generated crate from WebIDL
"""
license = "MIT/Apache-2.0"
edition = "2018"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg=web_sys_unstable_apis"]

[lib]
doctest = false
test = false

[dependencies]
wasm-bindgen = { path = "../..", version = "0.2.68" }
js-sys = { path = '../js-sys', version = '0.3.45' }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = { path = '../test', version = '0.3.18' }
wasm-bindgen-futures = { path = '../futures', version = '0.4.18' }

# This list is auto-generated by the wasm-bindgen-webidl program
[features]
AbortController = []
AbortSignal = ["EventTarget"]
AddEventListenerOptions = []
AesCbcParams = []
AesCtrParams = []
AesDerivedKeyParams = []
AesGcmParams = []
AesKeyAlgorithm = []
AesKeyGenParams = []
Algorithm = []
AlignSetting = []
AllowedBluetoothDevice = []
AllowedUsbDevice = []
AnalyserNode = ["AudioNode", "EventTarget"]
AnalyserOptions = []
AngleInstancedArrays = []
Animation = ["EventTarget"]
AnimationEffect = []
AnimationEvent = ["Event"]
AnimationEventInit = []
AnimationPlayState = []
AnimationPlaybackEvent = ["Event"]
AnimationPlaybackEventInit = []
AnimationPropertyDetails = []
AnimationPropertyValueDetails = []
AnimationTimeline = []
AssignedNodesOptions = []
AttestationConveyancePreference = []
Attr = ["EventTarget", "Node"]
AttributeNameValue = []
AudioBuffer = []
AudioBufferOptions = []
AudioBufferSourceNode = ["AudioNode", "AudioScheduledSourceNode", "EventTarget"]
AudioBufferSourceOptions = []
AudioConfiguration = []
AudioContext = ["BaseAudioContext", "EventTarget"]
AudioContextOptions = []
AudioContextState = []
AudioDestinationNode = ["AudioNode", "EventTarget"]
AudioListener = []
AudioNode = ["EventTarget"]
AudioNodeOptions = []
AudioParam = []
AudioParamMap = []
AudioProcessingEvent = ["Event"]
AudioScheduledSourceNode = ["AudioNode", "EventTarget"]
AudioStreamTrack = ["EventTarget", "MediaStreamTrack"]
AudioTrack = []
AudioTrackList = ["EventTarget"]
AudioWorklet = ["Worklet"]
AudioWorkletGlobalScope = ["WorkletGlobalScope"]
AudioWorkletNode = ["AudioNode", "EventTarget"]
AudioWorkletNodeOptions = []
AudioWorkletProcessor = []
AuthenticationExtensionsClientInputs = []
AuthenticationExtensionsClientOutputs = []
AuthenticatorAssertionResponse = ["AuthenticatorResponse"]
AuthenticatorAttachment = []
AuthenticatorAttestationResponse = ["AuthenticatorResponse"]
AuthenticatorResponse = []
AuthenticatorSelectionCriteria = []
AuthenticatorTransport = []
AutoKeyword = []
AutocompleteInfo = []
BarProp = []
BaseAudioContext = ["EventTarget"]
BaseComputedKeyframe = []
BaseKeyframe = []
BasePropertyIndexedKeyframe = []
BasicCardRequest = []
BasicCardResponse = []
BasicCardType = []
BatteryManager = ["EventTarget"]
BeforeUnloadEvent = ["Event"]
BinaryType = []
BiquadFilterNode = ["AudioNode", "EventTarget"]
BiquadFilterOptions = []
BiquadFilterType = []
Blob = []
BlobEvent = ["Event"]
BlobEventInit = []
BlobPropertyBag = []
BlockParsingOptions = []
Bluetooth = ["EventTarget"]
BluetoothAdvertisingEvent = ["Event"]
BluetoothAdvertisingEventInit = []
BluetoothCharacteristicProperties = []
BluetoothDataFilterInit = []
BluetoothDevice = ["EventTarget"]
BluetoothLeScanFilterInit = []
BluetoothManufacturerDataMap = []
BluetoothPermissionDescriptor = []
BluetoothPermissionResult = ["EventTarget", "PermissionStatus"]
BluetoothPermissionStorage = []
BluetoothRemoteGattCharacteristic = ["EventTarget"]
BluetoothRemoteGattDescriptor = []
BluetoothRemoteGattServer = []
BluetoothRemoteGattService = ["EventTarget"]
BluetoothServiceDataMap = []
BluetoothUuid = []
BoxQuadOptions = []
BroadcastChannel = ["EventTarget"]
BrowserElementDownloadOptions = []
BrowserElementExecuteScriptOptions = []
BrowserFeedWriter = []
BrowserFindCaseSensitivity = []
BrowserFindDirection = []
Cache = []
CacheBatchOperation = []
CacheQueryOptions = []
CacheStorage = []
CacheStorageNamespace = []
CanvasCaptureMediaStream = ["EventTarget", "MediaStream"]
CanvasGradient = []
CanvasPattern = []
CanvasRenderingContext2d = []
CanvasWindingRule = []
CaretChangedReason = []
CaretPosition = []
CaretStateChangedEventInit = []
CdataSection = ["CharacterData", "EventTarget", "Node", "Text"]
ChannelCountMode = []
ChannelInterpretation = []
ChannelMergerNode = ["AudioNode", "EventTarget"]
ChannelMergerOptions = []
ChannelPixelLayout = []
ChannelPixelLayoutDataType = []
ChannelSplitterNode = ["AudioNode", "EventTarget"]
ChannelSplitterOptions = []
CharacterData = ["EventTarget", "Node"]
CheckerboardReason = []
CheckerboardReport = []
CheckerboardReportService = []
ChromeFilePropertyBag = []
ChromeWorker = ["EventTarget", "Worker"]
Client = []
ClientQueryOptions = []
ClientRectsAndTexts = []
ClientType = []
Clients = []
Clipboard = ["EventTarget"]
ClipboardEvent = ["Event"]
ClipboardEventInit = []
ClipboardItem = []
ClipboardItemOptions = []
ClipboardPermissionDescriptor = []
CloseEvent = ["Event"]
CloseEventInit = []
CollectedClientData = []
Comment = ["CharacterData", "EventTarget", "Node"]
CompositeOperation = []
CompositionEvent = ["Event", "UiEvent"]
CompositionEventInit = []
ComputedEffectTiming = []
ConnStatusDict = []
ConnectionType = []
ConsoleCounter = []
ConsoleCounterError = []
ConsoleEvent = []
ConsoleInstance = []
ConsoleInstanceOptions = []
ConsoleLevel = []
ConsoleLogLevel = []
ConsoleProfileEvent = []
ConsoleStackEntry = []
ConsoleTimerError = []
ConsoleTimerLogOrEnd = []
ConsoleTimerStart = []
ConstantSourceNode = ["AudioNode", "AudioScheduledSourceNode", "EventTarget"]
ConstantSourceOptions = []
ConstrainBooleanParameters = []
ConstrainDomStringParameters = []
ConstrainDoubleRange = []
ConstrainLongRange = []
ContextAttributes2d = []
ConvertCoordinateOptions = []
ConvolverNode = ["AudioNode", "EventTarget"]
ConvolverOptions = []
Coordinates = []
Credential = []
CredentialCreationOptions = []
CredentialRequestOptions = []
CredentialsContainer = []
Crypto = []
CryptoKey = []
CryptoKeyPair = []
Csp = []
CspPolicies = []
CspReport = []
CspReportProperties = []
CssAnimation = ["Animation", "EventTarget"]
CssBoxType = []
CssConditionRule = ["CssGroupingRule", "CssRule"]
CssCounterStyleRule = ["CssRule"]
CssFontFaceRule = ["CssRule"]
CssFontFeatureValuesRule = ["CssRule"]
CssGroupingRule = ["CssRule"]
CssImportRule = ["CssRule"]
CssKeyframeRule = ["CssRule"]
CssKeyframesRule = ["CssRule"]
CssMediaRule = ["CssConditionRule", "CssGroupingRule", "CssRule"]
CssNamespaceRule = ["CssRule"]
CssPageRule = ["CssRule"]
CssPseudoElement = []
CssRule = []
CssRuleList = []
CssStyleDeclaration = []
CssStyleRule = ["CssRule"]
CssStyleSheet = ["StyleSheet"]
CssStyleSheetParsingMode = []
CssSupportsRule = ["CssConditionRule", "CssGroupingRule", "CssRule"]
CssTransition = ["Animation", "EventTarget"]
CustomElementRegistry = []
CustomEvent = ["Event"]
CustomEventInit = []
DataTransfer = []
DataTransferItem = []
DataTransferItemList = []
DateTimeValue = []
DecoderDoctorNotification = []
DecoderDoctorNotificationType = []
DedicatedWorkerGlobalScope = ["EventTarget", "WorkerGlobalScope"]
DelayNode = ["AudioNode", "EventTarget"]
DelayOptions = []
DeviceAcceleration = []
DeviceAccelerationInit = []
DeviceLightEvent = ["Event"]
DeviceLightEventInit = []
DeviceMotionEvent = ["Event"]
DeviceMotionEventInit = []
DeviceOrientationEvent = ["Event"]
DeviceOrientationEventInit = []
DeviceProximityEvent = ["Event"]
DeviceProximityEventInit = []
DeviceRotationRate = []
DeviceRotationRateInit = []
DhKeyDeriveParams = []
DirectionSetting = []
Directory = []
DisplayNameOptions = []
DisplayNameResult = []
DistanceModelType = []
DnsCacheDict = []
DnsCacheEntry = []
DnsLookupDict = []
Document = ["EventTarget", "Node"]
DocumentFragment = ["EventTarget", "Node"]
DocumentTimeline = ["AnimationTimeline"]
DocumentTimelineOptions = []
DocumentType = ["EventTarget", "Node"]
DomError = []
DomException = []
DomImplementation = []
DomMatrix = ["DomMatrixReadOnly"]
DomMatrixReadOnly = []
DomParser = []
DomPoint = ["DomPointReadOnly"]
DomPointInit = []
DomPointReadOnly = []
DomQuad = []
DomQuadInit = []
DomQuadJson = []
DomRect = ["DomRectReadOnly"]
DomRectInit = []
DomRectList = []
DomRectReadOnly = []
DomRequest = ["EventTarget"]
DomRequestReadyState = []
DomStringList = []
DomStringMap = []
DomTokenList = []
DomWindowResizeEventDetail = []
DragEvent = ["Event", "MouseEvent", "UiEvent"]
DragEventInit = []
DynamicsCompressorNode = ["AudioNode", "EventTarget"]
DynamicsCompressorOptions = []
EcKeyAlgorithm = []
EcKeyGenParams = []
EcKeyImportParams = []
EcdhKeyDeriveParams = []
EcdsaParams = []
EffectTiming = []
Element = ["EventTarget", "Node"]
ElementCreationOptions = []
ElementDefinitionOptions = []
EndingTypes = []
ErrorCallback = []
ErrorEvent = ["Event"]
ErrorEventInit = []
Event = []
EventInit = []
EventListener = []
EventListenerOptions = []
EventModifierInit = []
EventSource = ["EventTarget"]
EventSourceInit = []
EventTarget = []
Exception = []
ExtBlendMinmax = []
ExtColorBufferFloat = []
ExtColorBufferHalfFloat = []
ExtDisjointTimerQuery = []
ExtFragDepth = []
ExtSRgb = []
ExtShaderTextureLod = []
ExtTextureFilterAnisotropic = []
ExtendableEvent = ["Event"]
ExtendableEventInit = []
ExtendableMessageEvent = ["Event", "ExtendableEvent"]
ExtendableMessageEventInit = []
External = []
FakePluginMimeEntry = []
FakePluginTagInit = []
FetchEvent = ["Event", "ExtendableEvent"]
FetchEventInit = []
FetchObserver = ["EventTarget"]
FetchReadableStreamReadDataArray = []
FetchReadableStreamReadDataDone = []
FetchState = []
File = ["Blob"]
FileCallback = []
FileList = []
FilePropertyBag = []
FileReader = ["EventTarget"]
FileReaderSync = []
FileSystem = []
FileSystemDirectoryEntry = ["FileSystemEntry"]
FileSystemDirectoryReader = []
FileSystemEntriesCallback = []
FileSystemEntry = []
FileSystemEntryCallback = []
FileSystemFileEntry = ["FileSystemEntry"]
FileSystemFlags = []
FillMode = []
FlashClassification = []
FlexLineGrowthState = []
FocusEvent = ["Event", "UiEvent"]
FocusEventInit = []
FontFace = []
FontFaceDescriptors = []
FontFaceLoadStatus = []
FontFaceSet = ["EventTarget"]
FontFaceSetIterator = []
FontFaceSetIteratorResult = []
FontFaceSetLoadEvent = ["Event"]
FontFaceSetLoadEventInit = []
FontFaceSetLoadStatus = []
FormData = []
FrameType = []
FuzzingFunctions = []
GainNode = ["AudioNode", "EventTarget"]
GainOptions = []
Gamepad = []
GamepadAxisMoveEvent = ["Event", "GamepadEvent"]
GamepadAxisMoveEventInit = []
GamepadButton = []
GamepadButtonEvent = ["Event", "GamepadEvent"]
GamepadButtonEventInit = []
GamepadEvent = ["Event"]
GamepadEventInit = []
GamepadHand = []
GamepadHapticActuator = []
GamepadHapticActuatorType = []
GamepadMappingType = []
GamepadPose = []
GamepadServiceTest = []
Geolocation = []
GetNotificationOptions = []
GetRootNodeOptions = []
GetUserMediaRequest = []
Gpu = []
GpuAdapter = []
GpuAdapterFeatures = []
GpuAddressMode = []
GpuBindGroup = []
GpuBindGroupDescriptor = []
GpuBindGroupEntry = []
GpuBindGroupLayout = []
GpuBindGroupLayoutDescriptor = []
GpuBindGroupLayoutEntry = []
GpuBindingType = []
GpuBlendDescriptor = []
GpuBlendFactor = []
GpuBlendOperation = []
GpuBuffer = []
GpuBufferBinding = []
GpuBufferCopyView = []
GpuBufferDescriptor = []
GpuBufferUsage = []
GpuCanvasContext = []
GpuColorDict = []
GpuColorStateDescriptor = []
GpuColorWrite = []
GpuCommandBuffer = []
GpuCommandBufferDescriptor = []
GpuCommandEncoder = []
GpuCommandEncoderDescriptor = []
GpuCompareFunction = []
GpuCompilationInfo = []
GpuCompilationMessage = []
GpuCompilationMessageType = []
GpuComputePassDescriptor = []
GpuComputePassEncoder = []
GpuComputePipeline = []
GpuComputePipelineDescriptor = []
GpuCullMode = []
GpuDepthStencilStateDescriptor = []
GpuDevice = ["EventTarget"]
GpuDeviceDescriptor = []
GpuDeviceLostInfo = []
GpuErrorFilter = []
GpuExtent3dDict = []
GpuFeatureName = []
GpuFence = []
GpuFenceDescriptor = []
GpuFilterMode = []
GpuFrontFace = []
GpuImageBitmapCopyView = []
GpuIndexFormat = []
GpuInputStepMode = []
GpuLimits = []
GpuLoadOp = []
GpuMapMode = []
GpuObjectDescriptorBase = []
GpuOrigin2dDict = []
GpuOrigin3dDict = []
GpuOutOfMemoryError = []
GpuPipelineDescriptorBase = []
GpuPipelineLayout = []
GpuPipelineLayoutDescriptor = []
GpuPipelineStatisticName = []
GpuPowerPreference = []
GpuPrimitiveTopology = []
GpuProgrammableStageDescriptor = []
GpuQuerySet = []
GpuQuerySetDescriptor = []
GpuQueryType = []
GpuQueue = []
GpuRasterizationStateDescriptor = []
GpuRenderBundle = []
GpuRenderBundleDescriptor = []
GpuRenderBundleEncoder = []
GpuRenderBundleEncoderDescriptor = []
GpuRenderPassColorAttachmentDescriptor = []
GpuRenderPassDepthStencilAttachmentDescriptor = []
GpuRenderPassDescriptor = []
GpuRenderPassEncoder = []
GpuRenderPipeline = []
GpuRenderPipelineDescriptor = []
GpuRequestAdapterOptions = []
GpuSampler = []
GpuSamplerDescriptor = []
GpuShaderModule = []
GpuShaderModuleDescriptor = []
GpuShaderStage = []
GpuStencilOperation = []
GpuStencilStateFaceDescriptor = []
GpuStoreOp = []
GpuSwapChain = []
GpuSwapChainDescriptor = []
GpuTexture = []
GpuTextureAspect = []
GpuTextureComponentType = []
GpuTextureCopyView = []
GpuTextureDataLayout = []
GpuTextureDescriptor = []
GpuTextureDimension = []
GpuTextureFormat = []
GpuTextureUsage = []
GpuTextureView = []
GpuTextureViewDescriptor = []
GpuTextureViewDimension = []
GpuUncapturedErrorEvent = ["Event"]
GpuUncapturedErrorEventInit = []
GpuValidationError = []
GpuVertexAttributeDescriptor = []
GpuVertexBufferLayoutDescriptor = []
GpuVertexFormat = []
GpuVertexStateDescriptor = []
GridDeclaration = []
GridTrackState = []
GroupedHistoryEventInit = []
HalfOpenInfoDict = []
HashChangeEvent = ["Event"]
HashChangeEventInit = []
Headers = []
HeadersGuardEnum = []
HiddenPluginEventInit = []
History = []
HitRegionOptions = []
HkdfParams = []
HmacDerivedKeyParams = []
HmacImportParams = []
HmacKeyAlgorithm = []
HmacKeyGenParams = []
HtmlAllCollection = []
HtmlAnchorElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlAreaElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlAudioElement = ["Element", "EventTarget", "HtmlElement", "HtmlMediaElement", "Node"]
HtmlBaseElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlBodyElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlBrElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlButtonElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlCanvasElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlCollection = []
HtmlDListElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlDataElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlDataListElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlDetailsElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlDialogElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlDirectoryElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlDivElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlDocument = ["Document", "EventTarget", "Node"]
HtmlElement = ["Element", "EventTarget", "Node"]
HtmlEmbedElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlFieldSetElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlFontElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlFormControlsCollection = ["HtmlCollection"]
HtmlFormElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlFrameElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlFrameSetElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlHeadElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlHeadingElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlHrElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlHtmlElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlIFrameElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlImageElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlInputElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlLabelElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlLegendElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlLiElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlLinkElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlMapElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlMediaElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlMenuElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlMenuItemElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlMetaElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlMeterElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlModElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlOListElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlObjectElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlOptGroupElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlOptionElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlOptionsCollection = ["HtmlCollection"]
HtmlOutputElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlParagraphElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlParamElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlPictureElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlPreElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlProgressElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlQuoteElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlScriptElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlSelectElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlSlotElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlSourceElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlSpanElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlStyleElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTableCaptionElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTableCellElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTableColElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTableElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTableRowElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTableSectionElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTemplateElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTextAreaElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTimeElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTitleElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlTrackElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlUListElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlUnknownElement = ["Element", "EventTarget", "HtmlElement", "Node"]
HtmlVideoElement = ["Element", "EventTarget", "HtmlElement", "HtmlMediaElement", "Node"]
HttpConnDict = []
HttpConnInfo = []
HttpConnectionElement = []
IdbCursor = []
IdbCursorDirection = []
IdbCursorWithValue = ["IdbCursor"]
IdbDatabase = ["EventTarget"]
IdbFactory = []
IdbFileHandle = ["EventTarget"]
IdbFileMetadataParameters = []
IdbFileRequest = ["DomRequest", "EventTarget"]
IdbIndex = []
IdbIndexParameters = []
IdbKeyRange = []
IdbLocaleAwareKeyRange = ["IdbKeyRange"]
IdbMutableFile = ["EventTarget"]
IdbObjectStore = []
IdbObjectStoreParameters = []
IdbOpenDbOptions = []
IdbOpenDbRequest = ["EventTarget", "IdbRequest"]
IdbRequest = ["EventTarget"]
IdbRequestReadyState = []
IdbTransaction = ["EventTarget"]
IdbTransactionMode = []
IdbVersionChangeEvent = ["Event"]
IdbVersionChangeEventInit = []
IdleDeadline = []
IdleRequestOptions = []
IirFilterNode = ["AudioNode", "EventTarget"]
IirFilterOptions = []
ImageBitmap = []
ImageBitmapFormat = []
ImageBitmapRenderingContext = []
ImageCapture = []
ImageCaptureError = []
ImageCaptureErrorEvent = ["Event"]
ImageCaptureErrorEventInit = []
ImageData = []
InputEvent = ["Event", "UiEvent"]
InputEventInit = []
InstallTriggerData = []
IntersectionObserver = []
IntersectionObserverEntry = []
IntersectionObserverEntryInit = []
IntersectionObserverInit = []
IntlUtils = []
IterableKeyAndValueResult = []
IterableKeyOrValueResult = []
IterationCompositeOperation = []
JsonWebKey = []
KeyAlgorithm = []
KeyEvent = []
KeyIdsInitData = []
KeyboardEvent = ["Event", "UiEvent"]
KeyboardEventInit = []
KeyframeEffect = ["AnimationEffect"]
KeyframeEffectOptions = []
L10nElement = []
L10nValue = []
LifecycleCallbacks = []
LineAlignSetting = []
ListBoxObject = []
LocalMediaStream = ["EventTarget", "MediaStream"]
LocaleInfo = []
Location = []
MediaCapabilities = []
MediaCapabilitiesInfo = []
MediaConfiguration = []
MediaDecodingConfiguration = []
MediaDecodingType = []
MediaDeviceInfo = []
MediaDeviceKind = []
MediaDevices = ["EventTarget"]
MediaElementAudioSourceNode = ["AudioNode", "EventTarget"]
MediaElementAudioSourceOptions = []
MediaEncodingConfiguration = []
MediaEncodingType = []
MediaEncryptedEvent = ["Event"]
MediaError = []
MediaKeyError = ["Event"]
MediaKeyMessageEvent = ["Event"]
MediaKeyMessageEventInit = []
MediaKeyMessageType = []
MediaKeyNeededEventInit = []
MediaKeySession = ["EventTarget"]
MediaKeySessionType = []
MediaKeyStatus = []
MediaKeyStatusMap = []
MediaKeySystemAccess = []
MediaKeySystemConfiguration = []
MediaKeySystemMediaCapability = []
MediaKeySystemStatus = []
MediaKeys = []
MediaKeysPolicy = []
MediaKeysRequirement = []
MediaList = []
MediaQueryList = ["EventTarget"]
MediaQueryListEvent = ["Event"]
MediaQueryListEventInit = []
MediaRecorder = ["EventTarget"]
MediaRecorderErrorEvent = ["Event"]
MediaRecorderErrorEventInit = []
MediaRecorderOptions = []
MediaSource = ["EventTarget"]
MediaSourceEndOfStreamError = []
MediaSourceEnum = []
MediaSourceReadyState = []
MediaStream = ["EventTarget"]
MediaStreamAudioDestinationNode = ["AudioNode", "EventTarget"]
MediaStreamAudioSourceNode = ["AudioNode", "EventTarget"]
MediaStreamAudioSourceOptions = []
MediaStreamConstraints = []
MediaStreamError = []
MediaStreamEvent = ["Event"]
MediaStreamEventInit = []
MediaStreamTrack = ["EventTarget"]
MediaStreamTrackEvent = ["Event"]
MediaStreamTrackEventInit = []
MediaStreamTrackState = []
MediaTrackConstraintSet = []
MediaTrackConstraints = []
MediaTrackSettings = []
MediaTrackSupportedConstraints = []
MessageChannel = []
MessageEvent = ["Event"]
MessageEventInit = []
MessagePort = ["EventTarget"]
MidiAccess = ["EventTarget"]
MidiConnectionEvent = ["Event"]
MidiConnectionEventInit = []
MidiInput = ["EventTarget", "MidiPort"]
MidiInputMap = []
MidiMessageEvent = ["Event"]
MidiMessageEventInit = []
MidiOptions = []
MidiOutput = ["EventTarget", "MidiPort"]
MidiOutputMap = []
MidiPort = ["EventTarget"]
MidiPortConnectionState = []
MidiPortDeviceState = []
MidiPortType = []
MimeType = []
MimeTypeArray = []
MouseEvent = ["Event", "UiEvent"]
MouseEventInit = []
MouseScrollEvent = ["Event", "MouseEvent", "UiEvent"]
MozDebug = []
MutationEvent = ["Event"]
MutationObserver = []
MutationObserverInit = []
MutationObservingInfo = []
MutationRecord = []
NamedNodeMap = []
NativeOsFileReadOptions = []
NativeOsFileWriteAtomicOptions = []
NavigationType = []
Navigator = []
NavigatorAutomationInformation = []
NetworkCommandOptions = []
NetworkInformation = ["EventTarget"]
NetworkResultOptions = []
Node = ["EventTarget"]
NodeFilter = []
NodeIterator = []
NodeList = []
Notification = ["EventTarget"]
NotificationBehavior = []
NotificationDirection = []
NotificationEvent = ["Event", "ExtendableEvent"]
NotificationEventInit = []
NotificationOptions = []
NotificationPermission = []
ObserverCallback = []
OesElementIndexUint = []
OesStandardDerivatives = []
OesTextureFloat = []
OesTextureFloatLinear = []
OesTextureHalfFloat = []
OesTextureHalfFloatLinear = []
OesVertexArrayObject = []
OfflineAudioCompletionEvent = ["Event"]
OfflineAudioCompletionEventInit = []
OfflineAudioContext = ["BaseAudioContext", "EventTarget"]
OfflineAudioContextOptions = []
OfflineResourceList = ["EventTarget"]
OffscreenCanvas = ["EventTarget"]
OpenWindowEventDetail = []
OptionalEffectTiming = []
OrientationLockType = []
OrientationType = []
OscillatorNode = ["AudioNode", "AudioScheduledSourceNode", "EventTarget"]
OscillatorOptions = []
OscillatorType = []
OverSampleType = []
PageTransitionEvent = ["Event"]
PageTransitionEventInit = []
PaintRequest = []
PaintRequestList = []
PaintWorkletGlobalScope = ["WorkletGlobalScope"]
PannerNode = ["AudioNode", "EventTarget"]
PannerOptions = []
PanningModelType = []
Path2d = []
PaymentAddress = []
PaymentComplete = []
PaymentMethodChangeEvent = ["Event", "PaymentRequestUpdateEvent"]
PaymentMethodChangeEventInit = []
PaymentRequestUpdateEvent = ["Event"]
PaymentRequestUpdateEventInit = []
PaymentResponse = []
Pbkdf2Params = []
PcImplIceConnectionState = []
PcImplIceGatheringState = []
PcImplSignalingState = []
PcObserverStateType = []
Performance = ["EventTarget"]
PerformanceEntry = []
PerformanceEntryEventInit = []
PerformanceEntryFilterOptions = []
PerformanceMark = ["PerformanceEntry"]
PerformanceMeasure = ["PerformanceEntry"]
PerformanceNavigation = []
PerformanceNavigationTiming = ["PerformanceEntry", "PerformanceResourceTiming"]
PerformanceObserver = []
PerformanceObserverEntryList = []
PerformanceObserverInit = []
PerformanceResourceTiming = ["PerformanceEntry"]
PerformanceServerTiming = []
PerformanceTiming = []
PeriodicWave = []
PeriodicWaveConstraints = []
PeriodicWaveOptions = []
PermissionDescriptor = []
PermissionName = []
PermissionState = []
PermissionStatus = ["EventTarget"]
Permissions = []
PlaybackDirection = []
Plugin = []
PluginArray = []
PluginCrashedEventInit = []
PointerEvent = ["Event", "MouseEvent", "UiEvent"]
PointerEventInit = []
PopStateEvent = ["Event"]
PopStateEventInit = []
PopupBlockedEvent = ["Event"]
PopupBlockedEventInit = []
Position = []
PositionAlignSetting = []
PositionError = []
PositionOptions = []
Presentation = []
PresentationAvailability = ["EventTarget"]
PresentationConnection = ["EventTarget"]
PresentationConnectionAvailableEvent = ["Event"]
PresentationConnectionAvailableEventInit = []
PresentationConnectionBinaryType = []
PresentationConnectionCloseEvent = ["Event"]
PresentationConnectionCloseEventInit = []
PresentationConnectionClosedReason = []
PresentationConnectionList = ["EventTarget"]
PresentationConnectionState = []
PresentationReceiver = []
PresentationRequest = ["EventTarget"]
PresentationStyle = []
ProcessingInstruction = ["CharacterData", "EventTarget", "Node"]
ProfileTimelineLayerRect = []
ProfileTimelineMarker = []
ProfileTimelineMessagePortOperationType = []
ProfileTimelineStackFrame = []
ProfileTimelineWorkerOperationType = []
ProgressEvent = ["Event"]
ProgressEventInit = []
PromiseNativeHandler = []
PromiseRejectionEvent = ["Event"]
PromiseRejectionEventInit = []
PublicKeyCredential = ["Credential"]
PublicKeyCredentialCreationOptions = []
PublicKeyCredentialDescriptor = []
PublicKeyCredentialEntity = []
PublicKeyCredentialParameters = []
PublicKeyCredentialRequestOptions = []
PublicKeyCredentialRpEntity = []
PublicKeyCredentialType = []
PublicKeyCredentialUserEntity = []
PushEncryptionKeyName = []
PushEvent = ["Event", "ExtendableEvent"]
PushEventInit = []
PushManager = []
PushMessageData = []
PushPermissionState = []
PushSubscription = []
PushSubscriptionInit = []
PushSubscriptionJson = []
PushSubscriptionKeys = []
PushSubscriptionOptions = []
PushSubscriptionOptionsInit = []
RadioNodeList = ["NodeList"]
Range = []
RcwnPerfStats = []
RcwnStatus = []
ReadableStream = []
RecordingState = []
ReferrerPolicy = []
RegisterRequest = []
RegisterResponse = []
RegisteredKey = []
RegistrationOptions = []
Request = []
RequestCache = []
RequestCredentials = []
RequestDestination = []
RequestDeviceOptions = []
RequestInit = []
RequestMediaKeySystemAccessNotification = []
RequestMode = []
RequestRedirect = []
Response = []
ResponseInit = []
ResponseType = []
RsaHashedImportParams = []
RsaOaepParams = []
RsaOtherPrimesInfo = []
RsaPssParams = []
RtcAnswerOptions = []
RtcBundlePolicy = []
RtcCertificate = []
RtcCertificateExpiration = []
RtcCodecStats = []
RtcConfiguration = []
RtcDataChannel = ["EventTarget"]
RtcDataChannelEvent = ["Event"]
RtcDataChannelEventInit = []
RtcDataChannelInit = []
RtcDataChannelState = []
RtcDataChannelType = []
RtcDegradationPreference = []
RtcFecParameters = []
RtcIceCandidate = []
RtcIceCandidateInit = []
RtcIceCandidatePairStats = []
RtcIceCandidateStats = []
RtcIceComponentStats = []
RtcIceConnectionState = []
RtcIceCredentialType = []
RtcIceGatheringState = []
RtcIceServer = []
RtcIceTransportPolicy = []
RtcIdentityAssertion = []
RtcIdentityAssertionResult = []
RtcIdentityProvider = []
RtcIdentityProviderDetails = []
RtcIdentityProviderOptions = []
RtcIdentityProviderRegistrar = []
RtcIdentityValidationResult = []
RtcInboundRtpStreamStats = []
RtcLifecycleEvent = []
RtcMediaStreamStats = []
RtcMediaStreamTrackStats = []
RtcOfferAnswerOptions = []
RtcOfferOptions = []
RtcOutboundRtpStreamStats = []
RtcPeerConnection = ["EventTarget"]
RtcPeerConnectionIceEvent = ["Event"]
RtcPeerConnectionIceEventInit = []
RtcPriorityType = []
RtcRtcpParameters = []
RtcRtpCodecParameters = []
RtcRtpContributingSource = []
RtcRtpEncodingParameters = []
RtcRtpHeaderExtensionParameters = []
RtcRtpParameters = []
RtcRtpReceiver = []
RtcRtpSender = []
RtcRtpSourceEntry = []
RtcRtpSourceEntryType = []
RtcRtpSynchronizationSource = []
RtcRtpTransceiver = []
RtcRtpTransceiverDirection = []
RtcRtpTransceiverInit = []
RtcRtxParameters = []
RtcSdpType = []
RtcSessionDescription = []
RtcSessionDescriptionInit = []
RtcSignalingState = []
RtcStats = []
RtcStatsIceCandidatePairState = []
RtcStatsIceCandidateType = []
RtcStatsReport = []
RtcStatsReportInternal = []
RtcStatsType = []
RtcTrackEvent = ["Event"]
RtcTrackEventInit = []
RtcTransportStats = []
RtcdtmfSender = ["EventTarget"]
RtcdtmfToneChangeEvent = ["Event"]
RtcdtmfToneChangeEventInit = []
RtcrtpContributingSourceStats = []
RtcrtpStreamStats = []
Screen = ["EventTarget"]
ScreenColorGamut = []
ScreenLuminance = []
ScreenOrientation = ["EventTarget"]
ScriptProcessorNode = ["AudioNode", "EventTarget"]
ScrollAreaEvent = ["Event", "UiEvent"]
ScrollBehavior = []
ScrollBoxObject = []
ScrollIntoViewOptions = []
ScrollLogicalPosition = []
ScrollOptions = []
ScrollRestoration = []
ScrollSetting = []
ScrollState = []
ScrollToOptions = []
ScrollViewChangeEventInit = []
SecurityPolicyViolationEvent = ["Event"]
SecurityPolicyViolationEventDisposition = []
SecurityPolicyViolationEventInit = []
Selection = []
ServerSocketOptions = []
ServiceWorker = ["EventTarget"]
ServiceWorkerContainer = ["EventTarget"]
ServiceWorkerGlobalScope = ["EventTarget", "WorkerGlobalScope"]
ServiceWorkerRegistration = ["EventTarget"]
ServiceWorkerState = []
ServiceWorkerUpdateViaCache = []
ShadowRoot = ["DocumentFragment", "EventTarget", "Node"]
ShadowRootInit = []
ShadowRootMode = []
SharedWorker = ["EventTarget"]
SharedWorkerGlobalScope = ["EventTarget", "WorkerGlobalScope"]
SignResponse = []
SocketElement = []
SocketOptions = []
SocketReadyState = []
SocketsDict = []
SourceBuffer = ["EventTarget"]
SourceBufferAppendMode = []
SourceBufferList = ["EventTarget"]
SpeechGrammar = []
SpeechGrammarList = []
SpeechRecognition = ["EventTarget"]
SpeechRecognitionAlternative = []
SpeechRecognitionError = ["Event"]
SpeechRecognitionErrorCode = []
SpeechRecognitionErrorInit = []
SpeechRecognitionEvent = ["Event"]
SpeechRecognitionEventInit = []
SpeechRecognitionResult = []
SpeechRecognitionResultList = []
SpeechSynthesis = ["EventTarget"]
SpeechSynthesisErrorCode = []
SpeechSynthesisErrorEvent = ["Event", "SpeechSynthesisEvent"]
SpeechSynthesisErrorEventInit = []
SpeechSynthesisEvent = ["Event"]
SpeechSynthesisEventInit = []
SpeechSynthesisUtterance = ["EventTarget"]
SpeechSynthesisVoice = []
StereoPannerNode = ["AudioNode", "EventTarget"]
StereoPannerOptions = []
Storage = []
StorageEstimate = []
StorageEvent = ["Event"]
StorageEventInit = []
StorageManager = []
StorageType = []
StyleRuleChangeEventInit = []
StyleSheet = []
StyleSheetApplicableStateChangeEventInit = []
StyleSheetChangeEventInit = []
StyleSheetList = []
SubtleCrypto = []
SupportedType = []
SvgAngle = []
SvgAnimateElement = ["Element", "EventTarget", "Node", "SvgAnimationElement", "SvgElement"]
SvgAnimateMotionElement = ["Element", "EventTarget", "Node", "SvgAnimationElement", "SvgElement"]
SvgAnimateTransformElement = ["Element", "EventTarget", "Node", "SvgAnimationElement", "SvgElement"]
SvgAnimatedAngle = []
SvgAnimatedBoolean = []
SvgAnimatedEnumeration = []
SvgAnimatedInteger = []
SvgAnimatedLength = []
SvgAnimatedLengthList = []
SvgAnimatedNumber = []
SvgAnimatedNumberList = []
SvgAnimatedPreserveAspectRatio = []
SvgAnimatedRect = []
SvgAnimatedString = []
SvgAnimatedTransformList = []
SvgAnimationElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgBoundingBoxOptions = []
SvgCircleElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGeometryElement", "SvgGraphicsElement"]
SvgClipPathElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgComponentTransferFunctionElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgDefsElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgDescElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgElement = ["Element", "EventTarget", "Node"]
SvgEllipseElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGeometryElement", "SvgGraphicsElement"]
SvgFilterElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgForeignObjectElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgGeometryElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgGradientElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgGraphicsElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgImageElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgLength = []
SvgLengthList = []
SvgLineElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGeometryElement", "SvgGraphicsElement"]
SvgLinearGradientElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGradientElement"]
SvgMarkerElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgMaskElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgMatrix = []
SvgMetadataElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgNumber = []
SvgNumberList = []
SvgPathElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGeometryElement", "SvgGraphicsElement"]
SvgPathSeg = []
SvgPathSegArcAbs = ["SvgPathSeg"]
SvgPathSegArcRel = ["SvgPathSeg"]
SvgPathSegClosePath = ["SvgPathSeg"]
SvgPathSegCurvetoCubicAbs = ["SvgPathSeg"]
SvgPathSegCurvetoCubicRel = ["SvgPathSeg"]
SvgPathSegCurvetoCubicSmoothAbs = ["SvgPathSeg"]
SvgPathSegCurvetoCubicSmoothRel = ["SvgPathSeg"]
SvgPathSegCurvetoQuadraticAbs = ["SvgPathSeg"]
SvgPathSegCurvetoQuadraticRel = ["SvgPathSeg"]
SvgPathSegCurvetoQuadraticSmoothAbs = ["SvgPathSeg"]
SvgPathSegCurvetoQuadraticSmoothRel = ["SvgPathSeg"]
SvgPathSegLinetoAbs = ["SvgPathSeg"]
SvgPathSegLinetoHorizontalAbs = ["SvgPathSeg"]
SvgPathSegLinetoHorizontalRel = ["SvgPathSeg"]
SvgPathSegLinetoRel = ["SvgPathSeg"]
SvgPathSegLinetoVerticalAbs = ["SvgPathSeg"]
SvgPathSegLinetoVerticalRel = ["SvgPathSeg"]
SvgPathSegList = []
SvgPathSegMovetoAbs = ["SvgPathSeg"]
SvgPathSegMovetoRel = ["SvgPathSeg"]
SvgPatternElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgPoint = []
SvgPointList = []
SvgPolygonElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGeometryElement", "SvgGraphicsElement"]
SvgPolylineElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGeometryElement", "SvgGraphicsElement"]
SvgPreserveAspectRatio = []
SvgRadialGradientElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGradientElement"]
SvgRect = []
SvgRectElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGeometryElement", "SvgGraphicsElement"]
SvgScriptElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgSetElement = ["Element", "EventTarget", "Node", "SvgAnimationElement", "SvgElement"]
SvgStopElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgStringList = []
SvgStyleElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgSwitchElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgSymbolElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgTextContentElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgTextElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement", "SvgTextContentElement", "SvgTextPositioningElement"]
SvgTextPathElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement", "SvgTextContentElement"]
SvgTextPositioningElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement", "SvgTextContentElement"]
SvgTitleElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgTransform = []
SvgTransformList = []
SvgUnitTypes = []
SvgUseElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgViewElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgZoomAndPan = []
SvgaElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgfeBlendElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeColorMatrixElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeComponentTransferElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeCompositeElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeConvolveMatrixElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeDiffuseLightingElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeDisplacementMapElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeDistantLightElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeDropShadowElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeFloodElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeFuncAElement = ["Element", "EventTarget", "Node", "SvgComponentTransferFunctionElement", "SvgElement"]
SvgfeFuncBElement = ["Element", "EventTarget", "Node", "SvgComponentTransferFunctionElement", "SvgElement"]
SvgfeFuncGElement = ["Element", "EventTarget", "Node", "SvgComponentTransferFunctionElement", "SvgElement"]
SvgfeFuncRElement = ["Element", "EventTarget", "Node", "SvgComponentTransferFunctionElement", "SvgElement"]
SvgfeGaussianBlurElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeImageElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeMergeElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeMergeNodeElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeMorphologyElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeOffsetElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfePointLightElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeSpecularLightingElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeSpotLightElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeTileElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgfeTurbulenceElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvggElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgmPathElement = ["Element", "EventTarget", "Node", "SvgElement"]
SvgsvgElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement"]
SvgtSpanElement = ["Element", "EventTarget", "Node", "SvgElement", "SvgGraphicsElement", "SvgTextContentElement", "SvgTextPositioningElement"]
TcpReadyState = []
TcpServerSocket = ["EventTarget"]
TcpServerSocketEvent = ["Event"]
TcpServerSocketEventInit = []
TcpSocket = ["EventTarget"]
TcpSocketBinaryType = []
TcpSocketErrorEvent = ["Event"]
TcpSocketErrorEventInit = []
TcpSocketEvent = ["Event"]
TcpSocketEventInit = []
Text = ["CharacterData", "EventTarget", "Node"]
TextDecodeOptions = []
TextDecoder = []
TextDecoderOptions = []
TextEncoder = []
TextMetrics = []
TextTrack = ["EventTarget"]
TextTrackCue = ["EventTarget"]
TextTrackCueList = []
TextTrackKind = []
TextTrackList = ["EventTarget"]
TextTrackMode = []
TimeEvent = ["Event"]
TimeRanges = []
Touch = []
TouchEvent = ["Event", "UiEvent"]
TouchEventInit = []
TouchInit = []
TouchList = []
TrackEvent = ["Event"]
TrackEventInit = []
TransitionEvent = ["Event"]
TransitionEventInit = []
Transport = []
TreeBoxObject = []
TreeCellInfo = []
TreeView = []
TreeWalker = []
U2f = []
U2fClientData = []
UdpMessageEventInit = []
UdpOptions = []
UiEvent = ["Event"]
UiEventInit = []
Url = []
UrlSearchParams = []
Usb = ["EventTarget"]
UsbAlternateInterface = []
UsbConfiguration = []
UsbConnectionEvent = ["Event"]
UsbConnectionEventInit = []
UsbControlTransferParameters = []
UsbDevice = []
UsbDeviceFilter = []
UsbDeviceRequestOptions = []
UsbDirection = []
UsbEndpoint = []
UsbEndpointType = []
UsbInTransferResult = []
UsbInterface = []
UsbIsochronousInTransferPacket = []
UsbIsochronousInTransferResult = []
UsbIsochronousOutTransferPacket = []
UsbIsochronousOutTransferResult = []
UsbOutTransferResult = []
UsbPermissionDescriptor = []
UsbPermissionResult = ["EventTarget", "PermissionStatus"]
UsbPermissionStorage = []
UsbRecipient = []
UsbRequestType = []
UsbTransferStatus = []
UserProximityEvent = ["Event"]
UserProximityEventInit = []
UserVerificationRequirement = []
ValidityState = []
ValueEvent = ["Event"]
ValueEventInit = []
VideoConfiguration = []
VideoFacingModeEnum = []
VideoPlaybackQuality = []
VideoStreamTrack = ["EventTarget", "MediaStreamTrack"]
VideoTrack = []
VideoTrackList = ["EventTarget"]
VisibilityState = []
VoidCallback = []
VrDisplay = ["EventTarget"]
VrDisplayCapabilities = []
VrEye = []
VrEyeParameters = []
VrFieldOfView = []
VrFrameData = []
VrLayer = []
VrMockController = []
VrMockDisplay = []
VrPose = []
VrServiceTest = []
VrStageParameters = []
VrSubmitFrameResult = []
VttCue = ["EventTarget", "TextTrackCue"]
VttRegion = []
WatchAdvertisementsOptions = []
WaveShaperNode = ["AudioNode", "EventTarget"]
WaveShaperOptions = []
WebGl2RenderingContext = []
WebGlActiveInfo = []
WebGlBuffer = []
WebGlContextAttributes = []
WebGlContextEvent = ["Event"]
WebGlContextEventInit = []
WebGlFramebuffer = []
WebGlPowerPreference = []
WebGlProgram = []
WebGlQuery = []
WebGlRenderbuffer = []
WebGlRenderingContext = []
WebGlSampler = []
WebGlShader = []
WebGlShaderPrecisionFormat = []
WebGlSync = []
WebGlTexture = []
WebGlTransformFeedback = []
WebGlUniformLocation = []
WebGlVertexArrayObject = []
WebKitCssMatrix = ["DomMatrix", "DomMatrixReadOnly"]
WebSocket = ["EventTarget"]
WebSocketDict = []
WebSocketElement = []
WebglColorBufferFloat = []
WebglCompressedTextureAstc = []
WebglCompressedTextureAtc = []
WebglCompressedTextureEtc = []
WebglCompressedTextureEtc1 = []
WebglCompressedTexturePvrtc = []
WebglCompressedTextureS3tc = []
WebglCompressedTextureS3tcSrgb = []
WebglDebugRendererInfo = []
WebglDebugShaders = []
WebglDepthTexture = []
WebglDrawBuffers = []
WebglLoseContext = []
WebrtcGlobalStatisticsReport = []
WheelEvent = ["Event", "MouseEvent", "UiEvent"]
WheelEventInit = []
WidevineCdmManifest = []
Window = ["EventTarget"]
WindowClient = ["Client"]
Worker = ["EventTarget"]
WorkerDebuggerGlobalScope = ["EventTarget"]
WorkerGlobalScope = ["EventTarget"]
WorkerLocation = []
WorkerNavigator = []
WorkerOptions = []
Worklet = []
WorkletGlobalScope = []
WorkletOptions = []
XPathExpression = []
XPathNsResolver = []
XPathResult = []
XmlDocument = ["Document", "EventTarget", "Node"]
XmlHttpRequest = ["EventTarget", "XmlHttpRequestEventTarget"]
XmlHttpRequestEventTarget = ["EventTarget"]
XmlHttpRequestResponseType = []
XmlHttpRequestUpload = ["EventTarget", "XmlHttpRequestEventTarget"]
XmlSerializer = []
Xr = ["EventTarget"]
XrBoundedReferenceSpace = ["EventTarget", "XrReferenceSpace", "XrSpace"]
XrEye = []
XrFrame = []
XrHandedness = []
XrInputSource = []
XrInputSourceArray = []
XrInputSourceEvent = ["Event"]
XrInputSourceEventInit = []
XrInputSourcesChangeEvent = ["Event"]
XrInputSourcesChangeEventInit = []
XrPose = []
XrReferenceSpace = ["EventTarget", "XrSpace"]
XrReferenceSpaceEvent = ["Event"]
XrReferenceSpaceEventInit = []
XrReferenceSpaceType = []
XrRenderState = []
XrRenderStateInit = []
XrRigidTransform = []
XrSession = ["EventTarget"]
XrSessionEvent = ["Event"]
XrSessionEventInit = []
XrSessionInit = []
XrSessionMode = []
XrSpace = ["EventTarget"]
XrTargetRayMode = []
XrView = []
XrViewerPose = ["XrPose"]
XrViewport = []
XrVisibilityState = []
XrWebGlLayer = []
XrWebGlLayerInit = []
XsltProcessor = []
console = []
css = []